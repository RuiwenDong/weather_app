{"ast":null,"code":"var _jsxFileName = \"/Users/drw/Documents/weather_app/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; // import Header from './modules/Header';\n// import Input from './modules/Input';\n\nimport Weather from './modules/Weather'; // import './style.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getWeather = cityname => {\n      axios.get(`https://api.openweathermap.org/data/2.5/find?q=${cityname}&units=imperial&appid=f92c1f4990b0574d4a4e4d3dd556f388`).then(response => {\n        this.setState({\n          weather: response.data.list[0],\n          temp: response.data.list[0].main.temp,\n          //pushes data to this.state.temp\n          clouds: response.data.list[0].weather[0].description //pushes data to this.state.clouds\n\n        });\n      }).catch(error => {\n        console.log('Error', error);\n      });\n    };\n\n    this.updateInfo = cityinfo => {\n      this.setState({\n        city: cityinfo\n      });\n      this.getWeather(city); // if (event.key === 'Enter') {\n      //   event.preventDefault();\n      //   this.getWeather();\n      // }\n    };\n\n    this.state = {\n      weather: [],\n      temp: [],\n      //gets info from response.data.list[0].main.temp\n      clouds: [],\n      //gets info from response.data.list[0].weather[0].description\n      city: undefined\n    };\n  }\n\n  render() {\n    if (this.state.weather === undefined) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Fetching weather, please wait..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Weather, {\n        updateInfo: this.updateInfo,\n        weatherData: this.state.weather,\n        temp: this.state.temp,\n        cityvalue: this.state.cityvalue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/drw/Documents/weather_app/src/App.js"],"names":["React","Component","axios","Weather","App","constructor","getWeather","cityname","get","then","response","setState","weather","data","list","temp","main","clouds","description","catch","error","console","log","updateInfo","cityinfo","city","state","undefined","render","cityvalue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CAEA;;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAG;AACZ;;AADY,SAUdC,UAVc,GAUAC,QAAD,IAAc;AAEzBL,MAAAA,KAAK,CAACM,GAAN,CAAW,kDAAiDD,QAAS,wDAArE,EACGE,IADH,CACQC,QAAQ,IAAI;AAChB,aAAKC,QAAL,CAAc;AACZC,UAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmB,CAAnB,CADG;AAEZC,UAAAA,IAAI,EAAEL,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmB,CAAnB,EAAsBE,IAAtB,CAA2BD,IAFrB;AAE2B;AACvCE,UAAAA,MAAM,EAAEP,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmB,CAAnB,EAAsBF,OAAtB,CAA8B,CAA9B,EAAiCM,WAH7B,CAGyC;;AAHzC,SAAd;AAKD,OAPH,EAQGC,KARH,CAQSC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACD,OAVH;AAWD,KAvBa;;AAAA,SAyBdG,UAzBc,GAyBAC,QAAD,IAAc;AACzB,WAAKb,QAAL,CAAc;AACZc,QAAAA,IAAI,EAAED;AADM,OAAd;AAGA,WAAKlB,UAAL,CAAgBmB,IAAhB,EAJyB,CAKzB;AACA;AAEA;AACA;AACD,KAnCa;;AAEZ,SAAKC,KAAL,GAAa;AACXd,MAAAA,OAAO,EAAE,EADE;AAEXG,MAAAA,IAAI,EAAE,EAFK;AAED;AACVE,MAAAA,MAAM,EAAE,EAHG;AAGC;AACZQ,MAAAA,IAAI,EAAEE;AAJK,KAAb;AAMD;;AA6BDC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKF,KAAL,CAAWd,OAAX,KAAuBe,SAA3B,EAAsC;AACpC,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACD,KAFD,MAEO;AACL,0BAAQ,QAAC,OAAD;AACN,QAAA,UAAU,EAAE,KAAKJ,UADX;AAEN,QAAA,WAAW,EAAE,KAAKG,KAAL,CAAWd,OAFlB;AAIN,QAAA,IAAI,EAAE,KAAKc,KAAL,CAAWX,IAJX;AAKN,QAAA,SAAS,EAAE,KAAKW,KAAL,CAAWG;AALhB;AAAA;AAAA;AAAA;AAAA,cAAR;AAOD;AACF;;AAlDyB;;AAqD5B,eAAezB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n// import Header from './modules/Header';\n// import Input from './modules/Input';\nimport Weather from './modules/Weather';\n\n// import './style.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weather: [],\n      temp: [], //gets info from response.data.list[0].main.temp\n      clouds: [], //gets info from response.data.list[0].weather[0].description\n      city: undefined\n    };\n  }\n\n  getWeather = (cityname) => {\n    \n    axios.get(`https://api.openweathermap.org/data/2.5/find?q=${cityname}&units=imperial&appid=f92c1f4990b0574d4a4e4d3dd556f388`)\n      .then(response => {\n        this.setState({\n          weather: response.data.list[0],\n          temp: response.data.list[0].main.temp, //pushes data to this.state.temp\n          clouds: response.data.list[0].weather[0].description //pushes data to this.state.clouds\n        });\n      })\n      .catch(error => {\n        console.log('Error', error);\n      });\n  };\n\n  updateInfo = (cityinfo) => {\n    this.setState({\n      city: cityinfo\n    })\n    this.getWeather(city)\n    // if (event.key === 'Enter') {\n    //   event.preventDefault();\n\n    //   this.getWeather();\n    // }\n  }\n\n  render() {\n    if (this.state.weather === undefined) {\n      return (<div>Fetching weather, please wait..</div>)\n    } else {\n      return (<Weather \n        updateInfo={this.updateInfo}\n        weatherData={this.state.weather}\n        \n        temp={this.state.temp}\n        cityvalue={this.state.cityvalue}\n        />)\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}