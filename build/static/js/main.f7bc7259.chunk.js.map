{"version":3,"sources":["data/weatherapi.js","App.js","reportWebVitals.js","index.js"],"names":["getWeatherData","cityname","a","axios","get","data","App","useState","weatherdata","setWeatherdata","city","setCity","ottawa","setOttawa","beijing","setBeijing","toronto","setToronto","irvine","setIrvine","alaska","setAlaska","setTemp","loading","setLoading","toggle","setToggle","getData","data1","data2","data3","data4","data5","console","log","message","updateInfo","cityName","useEffect","className","id","params","type","onClick","Math","round","main","temp","onMouseOver","src","process","weather","alt","name","sys","country","description","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7bc7259.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = 'http://api.openweathermap.org/data/2.5/weather?';\nconst apiKey = '9ffb30474d8b85b71162ba4e03034feb';\n\nexport const getWeatherData = async (cityname) => {\n    try{\n        const {data} = await axios.get(baseUrl + `q=${cityname}&appid=${apiKey}`);\n        return data;\n    }catch(error){\n        throw error;\n    }\n}","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {getWeatherData} from './data/weatherapi';\nimport Particles from 'react-particles-js'\n\nfunction App() {\n  const [weatherdata, setWeatherdata] = useState(null);\n  const [city, setCity] = useState('Ottawa');\n  const [ottawa, setOttawa] = useState(null);\n  const [beijing, setBeijing] = useState(null);\n  const [toronto, setToronto] = useState(null);\n  const [irvine, setIrvine] = useState(null);\n  const [alaska, setAlaska] = useState(null);\n  const [temp, setTemp] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [toggle, setToggle] = useState(true);\n\n  const getData = async () => {\n    try{\n      const data = await getWeatherData(city);\n      setWeatherdata(data);\n      setLoading(false);   //loading\n      const data1 = await getWeatherData('Ottawa');\n      setOttawa(data1);\n      const data2 = await getWeatherData('Beijing');\n      setBeijing(data2);\n      const data3 = await getWeatherData('Toronto');\n      setToronto(data3);\n      const data4 = await getWeatherData('Irvine');\n      setIrvine(data4);\n      const data5 = await getWeatherData('Alaska');\n      setAlaska(data5);\n      console.log(data); \n      console.log(data1);\n    }catch(error){\n      console.log(error.message);\n      setLoading(false);\n    }\n  }\n\n  //toggle switch for Celsius and Fahrenheit\n  const handleClick = () => {\n    if(toggle === false){\n      setTemp(Math.round(weatherdata.main.temp - 273.15)+ '°C');\n      setToggle(true);\n      console.log('f to c');\n    }\n    if(toggle === true){\n      setTemp(Math.round((weatherdata.main.temp - 273.15) *9/5 +32) + '°F');\n      setToggle(false);\n      console.log('c to f');\n    }\n  }\n\n  const updateInfo = (cityName) =>{\n    setCity(cityName);\n  }\n \n  //add side effect function\n  useEffect(() => {\n    getData();\n  }, [city]);\n  \n  return (\n    <div className=\"main\">                     {/* Particle background */}                                \n      <Particles id='paricle-canvas'                                    \n    params={{\n\t    \"particles\": {\n\t        \"number\": {\n\t            \"value\": 100\n\t        },\n\t        \"size\": {\n\t            \"value\": 3\n\t        }\n\t    },\n\t    \"interactivity\": {\n\t        \"events\": {\n\t            \"onhover\": {\n\t                \"enable\": true,\n\t                \"mode\": \"repulse\"\n\t            }\n\t        }\n\t    }\n\t}} />\n      <div className=\"App\">\n      <div className=\"card\">\n      <header className=\"header\">\n        <div className=\"title\">\n        <b>Weather</b>\n        </div>\n        <label className=\"switch\" >                  {/* toggle switch section */}\n          <input type=\"checkbox\" id=\"togBtn\" />\n            <div className=\"slider round\" onClick={handleClick}>\n              <span className=\"f_degree\">&deg;F</span>\n              <span className=\"c_degree\">&deg;C</span>\n            </div>\n        </label>\n      </header>\n\n      {loading ? (\n       <div className=\"loader-container\"> \n       <b>Please wait, data is loading...</b>\n       </div>\n      ) : (\n        <>\n        {weatherdata && ottawa && beijing && toronto && irvine && alaska !== null ? (\n        <div className=\"content\">\n        <div className=\"container\">\n        <table className=\" weather-col tab1\">\n            <tbody>\n            <tr><td className=\"tab-title\" >\n            <b>Favorite Locations</b>\n            </td></tr>\n            <tr><td className=\"city-lists\" onMouseOver={()=>{updateInfo('Ottawa')}}>\n            <img src={`${process.env.PUBLIC_URL}/assets/images/${ottawa.weather[0].main}.png`} alt=\"weatherimg\" className=\"weatherimg\" />   \n            {/* img path is fully controlled by weather conditions, which is also same as the img file name */}\n              <span className=\"city\">Ottawa, Canada</span>\n            </td></tr>\n            <tr><td className=\"city-lists\" onMouseOver={()=>{updateInfo('Beijing')}}>\n            <img src={`${process.env.PUBLIC_URL}/assets/images/${beijing.weather[0].main}.png`} alt=\"weatherimg\" className=\"weatherimg\" />\n              <span className=\"city\">Beijing, China</span>\n            </td></tr>\n            <tr><td className=\"city-lists\" onMouseOver={()=>{updateInfo('Toronto')}}>\n            <img src={`${process.env.PUBLIC_URL}/assets/images/${toronto.weather[0].main}.png`} alt=\"weatherimg\" className=\"weatherimg\" />\n              <span className=\"city\">Toronto, Canada</span>\n            </td></tr>\n            <tr><td className=\"city-lists\" onMouseOver={()=>{updateInfo('Irvine')}}>\n            <img src={`${process.env.PUBLIC_URL}/assets/images/${irvine.weather[0].main}.png`} alt=\"weatherimg\" className=\"weatherimg\" />\n              <span className=\"city\">Irvine, United States</span>\n            </td></tr>\n            <tr><td className=\"city-lists\" onMouseOver={()=>{updateInfo('Alaska')}}>\n            <img src={`${process.env.PUBLIC_URL}/assets/images/${alaska.weather[0].main}.png`} alt=\"weatherimg\" className=\"weatherimg\" />\n              <span className=\"city\">Alaska, United States</span>\n            </td></tr>\n            <tr className=\"emp\"></tr>\n            </tbody>\n          </table>\n\n          <table className=\" tab2 weather-col\">\n          <tbody>\n          <tr><td className=\"tab-title\"><b>{weatherdata.name}, {weatherdata.sys.country}</b></td></tr>\n          <tr className=\"detail\"><td>\n           <img src={`${process.env.PUBLIC_URL}/assets/images/${weatherdata.weather[0].main}.png`} alt=\"weatherimg\" className=\"weatherimg\" />\n          <div className=\"detail-info\">  {/* Ternary operator control the display of Celsius or Fahrenheit */}\n            <div className=\"temp\">{toggle === true \n            ? Math.round(weatherdata.main.temp - 273.15)+ '°C' \n            : Math.round((weatherdata.main.temp - 273.15) *9/5 +32) + '°F'}</div> \n            <span>{weatherdata.weather[0].description}</span>\n          </div> \n          </td>\n          </tr>\n          </tbody>\n          </table>\n        </div>\n      </div>\n      ) : null}\n        </>\n      )}\n    </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}